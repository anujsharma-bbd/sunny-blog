{"version":3,"sources":["assets/sunny-profile.jpg","routes.js","App.js","serviceWorker.js","index.js","shared/asyncComponent.js"],"names":["module","exports","AsyncHome","asyncComponent","AsyncAboutUs","AsyncJourney","AsyncContactUs","AsyncMarketing","AsynDevices","RouterCollection","className","alt","src","profileImg","UncontrolledDropdown","to","activeClassName","DropdownToggle","nav","caret","DropdownMenu","right","DropdownItem","tag","exact","path","component","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","importComponent","props","state","isLoading","this","setState","default","catch","err","D"],"mappings":"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","file":"static/js/main.ee1d2998.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sunny-profile.57801c08.jpg\";","import { HashRouter as Router, Route, Switch, NavLink } from 'react-router-dom';\r\nimport React from 'react';\r\nimport \"babel-polyfill\";\r\n\r\nimport { asyncComponent } from './shared/asyncComponent';\r\nimport profileImg from './assets/sunny-profile.jpg';\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nconst AsyncHome = asyncComponent(() => import('./components/home'));\r\nconst AsyncAboutUs = asyncComponent(() => import('./components/aboutus'));\r\nconst AsyncJourney = asyncComponent(() => import('./components/journey'));\r\nconst AsyncContactUs = asyncComponent(() => import('./components/contactus'));\r\nconst AsyncMarketing = asyncComponent(() => import('./components/marketing'));\r\nconst AsynDevices = asyncComponent(() => import('./components/devices'));\r\n\r\nclass RouterCollection extends React.Component {\r\n   render() {\r\n      return (\r\n         <div className='router-container'>\r\n            <Router>\r\n               <header className=\"App-header\">\r\n                  <div className=\"profile\">\r\n                     <img alt=\"\" src={profileImg} className=\"icon\" />\r\n                     <div className=\"full-blog\">Sunny&nbsp;Sharma's&nbsp;blog</div>\r\n                     <div className=\"short-blog\">Sunny</div>\r\n                  </div>\r\n                  <ul className=\"menu-header\">\r\n                     <UncontrolledDropdown>\r\n                        <NavLink to='/devices' className=\"sub-menu-class\" activeClassName=\"selected-menu\">\r\n                           <DropdownToggle nav caret>\r\n                              Devices\r\n                           </DropdownToggle>\r\n                        </NavLink>\r\n                        <DropdownMenu right>\r\n                           <DropdownItem tag=\"span\" className=\"p-0\">\r\n                              <NavLink tag=\"div\" to={`/devices/printers`} className=\"submenu-item\" exact activeClassName=\"selected-sub-menu\">Printers</NavLink>\r\n                           </DropdownItem>\r\n                        </DropdownMenu>\r\n                     </UncontrolledDropdown>\r\n                  </ul>\r\n                  <ul className=\"menu-header\">\r\n                     <UncontrolledDropdown>\r\n                        <NavLink to='/marketings' className=\"sub-menu-class\" activeClassName=\"selected-menu\">\r\n                           <DropdownToggle nav caret>\r\n                              Marketing\r\n                           </DropdownToggle>\r\n                        </NavLink>\r\n                        <DropdownMenu right>\r\n                           <DropdownItem tag=\"span\" className=\"p-0\">\r\n                              <NavLink tag=\"div\" to={`/marketings/what-is-digital-marketing`} className=\"submenu-item\" exact activeClassName=\"selected-sub-menu\">What is Digital Marketing?</NavLink>\r\n                           </DropdownItem>\r\n                           <DropdownItem tag=\"span\" className=\"p-0\">\r\n                              <NavLink tag=\"div\" to={`/marketings/what-is-google-adwords`} className=\"submenu-item\" exact activeClassName=\"selected-sub-menu\">What is Google Adwords?</NavLink>\r\n                           </DropdownItem>\r\n                        </DropdownMenu>\r\n                     </UncontrolledDropdown>\r\n                  </ul>\r\n                  <NavLink to='/contactus' exact activeClassName=\"selected-menu\">Contact Us</NavLink>\r\n                  <NavLink to='/journey' exact activeClassName=\"selected-menu\">Journey</NavLink>\r\n                  <NavLink to='/aboutme' exact activeClassName=\"selected-menu\">About Me</NavLink>\r\n                  <NavLink to='/' exact activeClassName=\"selected-menu\">Home</NavLink>\r\n               </header>\r\n\r\n               <div className=\"routes-container\">\r\n                  <Switch>\r\n                     <Route exact path='/' component={AsyncHome} />\r\n                     <Route exact path='/aboutme' component={AsyncAboutUs} />\r\n                     <Route exact path='/journey' component={AsyncJourney} />\r\n                     <Route exact path='/contactus' component={AsyncContactUs} />\r\n                     <Route path='/marketings' component={AsyncMarketing} />\r\n                     <Route path='/devices' component={AsynDevices} />\r\n                  </Switch>\r\n               </div>\r\n               {  /*      // <footer className=\"App-footer\">\r\n               //    <Link to='/home'>copyright @ 2019</Link>\r\n               // </footer>\r\n      */\r\n               }\r\n            </Router>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default RouterCollection;","import React from 'react';\r\nimport RouterCollection from './routes';\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n   return (\r\n      <div className=\"App\">         \r\n         <RouterCollection />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\n\r\nexport const asyncComponent = (importComponent) => {\r\n\r\n   class AsyncComponent extends React.Component {\r\n      constructor(props) {\r\n         super(props);\r\n         this.state = {\r\n            component: null,\r\n            isLoading: true\r\n         };\r\n      }\r\n      // async componentDidMount() {\r\n      //    const { default: component } = await importComponent();\r\n      //    this.setState({\r\n      //       component: null\r\n      //    });\r\n      // }\r\n      // adding feature of loading/spinner untill coponent gets loaded\r\n      componentDidMount() {\r\n         this.setState({\r\n            isLoading: true\r\n         });\r\n         importComponent().then(({ default: component }) => {\r\n            this.setState({\r\n               component: component,\r\n               isLoading: false\r\n            });\r\n         }).catch((err) => {\r\n            this.setState({\r\n               component: null,\r\n               isLoading: false\r\n            });\r\n         });\r\n\r\n      }\r\n      render() {\r\n         const { component: D, isLoading } = this.state;\r\n         return (\r\n            D ? <D {...this.props} /> : isLoading ? <div> loading ...</div> : null\r\n         );\r\n      }\r\n\r\n   }\r\n   return AsyncComponent;\r\n}"],"sourceRoot":""}